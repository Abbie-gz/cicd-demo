name: Test pipeline

on: [ push ]

jobs:
  test-pipeline:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.7 ]

    env:
      DATABRICKS_HOST: ${{{{ secrets.DATABRICKS_HOST }}}}
      DATABRICKS_TOKEN:  ${{{{ secrets.DATABRICKS_TOKEN }}}}

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{{{ runner.os }}}}-pip-${{{{ hashFiles('**/unit-requirements.txt') }}}}
          restore-keys: |
            ${{{{ runner.os }}}}-pip-${{{{ hashFiles('**/unit-requirements.txt') }}}}
            ${{{{ runner.os }}}}-pip-

      - name: Install pip
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install -r unit-requirements.txt
          pip install -U tools/dbx-0.7.0-py3-none-any.whl
          pip install -e .

      - name: Run unit tests
        run: |
          echo "Launching tests"
          pytest tests/unit

      - name: Prepare profile
        run: |
          echo "[{profile}]" >> ~/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
          echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg

      - name: Build package
        run: |
          python setup.py clean --all bdist_wheel

      - name: Deploy integration test
        run: |
          dbx deploy --jobs={project_name}-sample-integration-test

      - name: Launch integration test
        run: |
          dbx launch --job={project_name}-sample-integration-test --trace



